type Query {
  hello: String
  product(id: ID!): Product
  products: [Product!]!
  category(id: ID!): Category
}
type Mutation {
  addProduct(dto: CreateProductDto!): Product
  updateProduct(id: ID!, dto: UpdateProductDto!): Product
  deleteProduct(id: ID!): ID
  # login
  login(email: EmailAddress!, password: String!): AuthResponse
  # category
  addCategory(dto: CreateCategoryDto): Category
}
type Product {
  id: ID!
  name: String!
  price: Float!
  description: String!
  image: String!
  createdAt: String!
  categoryId: ID!
  category: Category!
}
type Category {
  id: ID!
  name: String!
  image: String!
  products: [Product!]!
}
type User {
  id: ID!
  email: String!
  role: String!
  createdAt: String!
}
type AuthResponse {
  access_token: String!
  user: User!
}
input CreateProductDto {
  name: String!
  price: Int!
  description: String!
  image: String!
  categoryId: ID!
}
input UpdateProductDto {
  name: String
  price: Int
  description: String
  image: String
  categoryId: ID
}
input CreateCategoryDto {
  name: CategoryNameType!
  image: URL!
}
scalar CategoryNameType